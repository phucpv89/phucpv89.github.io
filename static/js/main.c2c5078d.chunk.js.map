{"version":3,"sources":["components/loading/index.js","reducers/index.js","containers/page-introduce/index.js","containers/page-home/index.js","containers/full/index.js","containers/full/full.js","containers/page-guide/index.js","containers/app.js","index.js","configure-store.js","apis/const.js","apis/api.js","reducers/app-reducer.js","components/toast/index.js","components/process-spinner/index.js","components/box-wrapper.js","components/button.js","components/segmented-control-react/index.js","components/wrapper-page-hoc.js","components/index.js"],"names":["Loading","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","React","PureComponent","routeInitialState","location","routeReducer","state","arguments","length","undefined","action","type","LOCATION_CHANGE","Object","objectSpread","payload","Loadable","loader","__webpack_require__","e","then","bind","loading","Full","window","ZaloPay","setProperty","navigation","hidden","this","getUserInfo","props","history","push","react_default","components","Component","Promise","all","App","document","documentElement","addEventListener","event","touches","preventDefault","lastTouchEnd","now","Date","getTime","backgroundColor","titleColor","pullToRefresh","Switch","Route","exact","path","component","MasterPage","HomePage","IntroducePage","GuidePage","createHistory","store","injectedReducers","initialState","middlewares","thunk","routerMiddleware","enhancers","applyMiddleware","apply","composeEnhancers","compose","createStore","combineReducers","route","app","require","reducer","configureStore","MOUNT_NODE","getElementById","ReactDOM","render","es","react_router_redux_es","Environment","BaseUrl","_BaseUrl","defineProperty","RETURN_CODE","api","axios","create","baseURL","timeout","headers","Content-Type","interceptors","response","use","data","returncode","reject","Error","returnmessage","error","message","request","createActions","updateUserInfo","showToast","Types","Creators","AppTypes","INITIAL_STATE","__webpack_exports__","userInfo","toastMsg","toastDuration","fullScreenImageUrl","createReducer","_createReducer","UPDATE_USER_INFO","_ref","SHOW_TOAST","_ref2","startUp","_ref3","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","userID","userid","accesstoken","phonenumber","displayname","avatar","accessToken","defaults","stop","_x","Toast","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isVisible","_this2","setTimeout","setState","requestClose","duration","className","defaultProps","BoxWrapper","concat","children","ZPButton","titleClassName","objectWithoutProperties","Button_default","assign","variant","color","size","title","SegmentedControl","onChange","selectedSegment","onChangeSegment","renderSegments","segments","map","segment","i","key","name","disabled","aria-disabled","onClick","assertThisInitialized","selected","indexOf","x","CircleButton","ZPWrapperPageHOC","Comp","_React$Component","NewComp","_getPrototypeOf2","_len","args","Array","_key","handleCloseButtonPress","goBack","handleRightButtonPress","alert","inherits","createClass","value","wrapper_page_hoc_CircleButton","d","box_wrapper","components_button","segmented_control_react_SegmentedControl","wrapper_page_hoc"],"mappings":"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","file":"static/js/main.c2c5078d.chunk.js","sourcesContent":["import React from 'react';\nimport '../index.scss';\n\nexport default class Loading extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <span>Loading</span>\n      </div>\n    );\n  }\n}\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { LOCATION_CHANGE } from 'react-router-redux';\n\n/*\n * routeReducer\n *\n * The reducer merges route location changes into our immutable state.\n * The change is necessitated by moving to react-router-redux@5\n *\n */\n\n// Initial routing state\nconst routeInitialState = {\n  location: null\n};\n\n/**\n * Merge route into the global application state\n */\nexport function routeReducer(state = routeInitialState, action) {\n  switch (action.type) {\n    /* istanbul ignore next */\n    case LOCATION_CHANGE:\n      return {\n        ...state,\n        location: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n * Creates the main reducer with the dynamically injected ones\n */\nexport default function createReducer(injectedReducers) {\n  return combineReducers({\n    route: routeReducer,\n    app: require('./app-reducer').reducer,\n    ...injectedReducers\n  });\n}\n","import Loadable from 'react-loadable';\nimport Loading from '../../components/loading';\n\nexport default Loadable({\n  loader: () => import('./page-introduce'),\n  loading: Loading\n});\n","import Loadable from 'react-loadable';\nimport Loading from '../../components/loading';\n\nexport default Loadable({\n  loader: () => import('./page-home'),\n  loading: Loading\n});\n","import Full from './full';\n\nexport default Full;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { Loading } from '../../components';\n// import TopazAPI from '../../apis';\n\nclass Full extends Component {\n  componentDidMount() {\n    window.ZaloPay.setProperty(\n      {\n        navigation: {\n          hidden: false\n        }\n      },\n      () => {}\n    );\n    this.getUserInfo();\n  }\n\n  async getUserInfo() {\n    const { history } = this.props;\n    history.push('./introduce');\n    return;\n    // try {\n    //   await TopazAPI.getAuthorization();\n    //   const appInfo = await TopazAPI.getAppInfo();\n    //   console.log('appInfo', appInfo);\n    //   const { history } = this.props;\n    //   history.push('./introduce');\n    // } catch (error) {\n    //   alert(JSON.stringify(error));\n    //   // const { history } = this.props;\n    //   // history.push('./introduce');\n    // }\n  }\n\n  render() {\n    return <Loading />;\n  }\n}\n\n// Full.propTypes = {\n//   isReady: PropTypes.bool,\n//   toastMsg: PropTypes.string,\n//   toastDuration: PropTypes.number,\n//   startUp: PropTypes.func,\n//   showToast: PropTypes.func\n// };\n// Full.defaultProps = {\n//   toastMsg: '',\n//   startUp: () => {},\n//   showToast: () => {}\n// };\n\n// const mapStateToProps = (state) => ({\n//   isReady: !!state.app.userInfo,\n//   toastMsg: state.app.toastMsg,\n//   toastDuration: state.app.toastDuration\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   dispatch\n//   // startUp: () => dispatch(AppActions.startUp()),\n//   // showToast: message => dispatch(AppActions.showToast(message)),\n// });\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Full);\nexport default Full;\n","import Loadable from 'react-loadable';\nimport Loading from '../../components/loading';\n\nexport default Loadable({\n  loader: () => import('./page-guide'),\n  loading: Loading\n});\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport IntroducePage from '../containers/page-introduce';\n\nimport HomePage from '../containers/page-home';\nimport MasterPage from '../containers/full';\nimport GuidePage from '../containers/page-guide';\n\nclass App extends React.Component {\n  componentDidMount() {\n    document.documentElement.addEventListener(\n      'touchstart',\n      function(event) {\n        if (event.touches.length > 1) {\n          event.preventDefault();\n        }\n      },\n      false\n    );\n    var lastTouchEnd = 0;\n    document.documentElement.addEventListener(\n      'touchend',\n      function(event) {\n        var now = new Date().getTime();\n        if (now - lastTouchEnd <= 300) {\n          event.preventDefault();\n        }\n        lastTouchEnd = now;\n      },\n      false\n    );\n    window.ZaloPay.setProperty(\n      {\n        navigation: {\n          backgroundColor: '#c7c7cc',\n          titleColor: '#000000',\n          pullToRefresh: false\n        }\n      },\n      () => {}\n    );\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={MasterPage} />\n        <Route exact path=\"/home\" component={HomePage} />\n        <Route exact path=\"/introduce\" component={IntroducePage} />\n        <Route exact path=\"/guide\" component={GuidePage} />\n      </Switch>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\n/**\n * Redux and router, remove this if redux is not needed\n */\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\n\n/**\n * createHashHistory: hash history\n * createBrowserHistory: browser history\n * remove this if redux is not needed\n */\nimport createHistory from 'history/createHashHistory';\n\n/**\n * remove this if redux is not needed\n */\nimport configureStore from './configure-store';\n\nimport App from './containers/app';\n\n/**\n * remove this if redux is not needed\n */\nconst initialState = {};\nconst history = createHistory();\nconst store = configureStore(initialState, history);\n\nconst MOUNT_NODE = document.getElementById('root');\n\n/**\n * If using redux and router\n */\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>,\n    MOUNT_NODE\n  );\n};\n\n/**\n * If using redux\n */\n// const render = () => {\n//   ReactDOM.render(\n//     <Provider store={store}>\n//       <App />\n//     </Provider>,\n//     MOUNT_NODE\n//   );\n// };\n\n/**\n * If not using redux and router\n */\n// const render = () => {\n//   ReactDOM.render(<App />, MOUNT_NODE);\n// };\n\nif (module.hot) {\n  // Hot reloadable React components and translation json files\n  // modules.hot.accept does not accept dynamic dependencies,\n  // have to be constants at compile-time\n  module.hot.accept(['./containers/app'], () => {\n    ReactDOM.unmountComponentAtNode(MOUNT_NODE);\n    render();\n  });\n}\n\nrender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'react-router-redux';\nimport thunk from 'redux-thunk';\n\nimport createReducer from './reducers';\n\nexport default function configureStore(initialState = {}, history) {\n  // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [thunk, routerMiddleware(history)];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle, indent */\n  const composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          // TODO Try to remove when `react-router-redux` is out of beta, LOCATION_CHANGE should not be fired more than once after hot reloading\n          // Prevent recomputing reducers for `replaceReducer`\n          shouldHotReload: false,\n        })\n      : compose;\n  /* eslint-enable */\n\n  const store = createStore(\n    createReducer(),\n    initialState,\n    composeEnhancers(...enhancers)\n  );\n\n  // Extensions\n  store.injectedReducers = {}; // Reducer registry\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n\n  return store;\n}\n","const APIPath = {\n  GET_PIG: '/topaz/api/v1/pig',\n  SMASH_PIG: '/topaz/api/v1/smashpig',\n  GET_VOCHERS: '/topaz/api/v1/getvouchers',\n  // GET_APP_INFO: '/topaz/api/v1/configs',\n  GET_APP_INFO: 'https://hn.algolia.com/api/v1/search?query=',\n  CREATE_PIG: '/topaz/api/v1/createpig'\n};\n\nconst Environment = {\n  MC_SANDBOX: 1,\n  STAGING: 2,\n  PRODUCTION: 3,\n  DEV_SANDBOX: 4,\n  QC_SANDBOX: 5\n};\n\nconst BaseUrl = {\n  [Environment.QC_SANDBOX]: 'https://devzpm.zalopay.com.vn/',\n  [Environment.STAGING]: 'https://stgzpm.zalopay.com.vn/',\n  [Environment.PRODUCTION]: 'https://zpm.zalopay.com.vn/'\n};\n\n// const BASE_URL = BaseUrl[Environment.QC_SANDBOX];\n\nexport { APIPath, BaseUrl, Environment };\n","import axios from 'axios';\nimport { Environment, BaseUrl } from './const';\n\n// const HOST = window.host;\n// const API_KEY = window.apiKey;\n\nconst RETURN_CODE = {\n  success: 1\n};\n\n/* \nuserid int64\naccesstoken string\nreqdate int64\nappversion string \ndeviceid string\n*/\n\nconst api = axios.create({\n  baseURL: BaseUrl[Environment.QC_SANDBOX],\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json;charset=utf-8'\n  }\n});\n\napi.interceptors.response.use(\n  (response) => {\n    if (response.data && response.data.returncode === RETURN_CODE.success) {\n      return response.data.data;\n    } else {\n      return Promise.reject(new Error(response.data.returnmessage));\n    }\n  },\n  (error) => {\n    if (error.response) {\n      return Promise.reject(new Error(error.response.data.message));\n    } else if (error.request) {\n      return Promise.reject(new Error('No response was received'));\n    } else {\n      return Promise.reject(new Error(error.message));\n    }\n  }\n);\n\nexport function setAuthorizationHeader(userID, accessToken) {\n  api.defaults.headers.userID = userID;\n  api.defaults.headers.accessToken = accessToken;\n  // api.defaults.headers.apiKey = API_KEY;\n}\n\nexport default api;\n","import { createReducer, createActions } from 'reduxsauce';\nimport { setAuthorizationHeader } from '../apis/api';\n// import { IOS_STORE, ANDROID_STORE, APP_LINK, WEB_LINK } from '../utils/constants';\n// import { webos } from '../utils/commons';\n\n/* ------------- Types and Action Creators ------------- */\nconst { Types, Creators } = createActions({\n  updateUserInfo: ['userInfo'],\n  showToast: ['toastMsg', 'toastDuration']\n});\n\nexport const AppTypes = Types;\nexport default Creators;\n\n/* -------------- Initial State ----------- */\n\nexport const INITIAL_STATE = {\n  userInfo: null,\n  toastMsg: '',\n  toastDuration: 0,\n  fullScreenImageUrl: ''\n};\n\n/* ------------- Reducers -------------- */\n\nconst updateUserInfo = (state, { userInfo }) => ({ ...state, userInfo });\nconst showToast = (state, { toastMsg, toastDuration }) => ({\n  ...state,\n  toastMsg,\n  toastDuration: !toastMsg ? 0 : toastDuration || 3000\n});\n\n/* ----------- Hookup Reducers To Types ----------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.UPDATE_USER_INFO]: updateUserInfo,\n  [Types.SHOW_TOAST]: showToast\n});\n\n/* ----------- Actions for redux-thunk ----------- */\n\nCreators.startUp = () => async (dispatch) => {\n  try {\n    // const ZaloPayInternal = window.ZaloPayInternal;\n    // const lag = 1250;\n    // let url = WEB_LINK;\n    // let store = '';\n\n    // if (!ZaloPayInternal.isZaloPay) {\n    //   if (webos === 'android' || webos === 'ios') {\n    //     url = APP_LINK;\n    //     store = webos === 'android' ? ANDROID_STORE : IOS_STORE;\n    //   }\n\n    //   window.location.href = url;\n    //   if (store !== '') {\n    //     setTimeout(function () {\n    //       window.location.href = store;\n    //     }, lag);\n    //   }\n    //   throw new Error('Run in ZaloPayClient Please');\n    // } else {\n    //   ZaloPayInternal.getUserInfo(1, response => {\n    //     if (response.errorCode === 1) {\n    //       const userInfo = response.data;\n    //       setAuthorizationHeader(userInfo.userid, userInfo.accesstoken);\n    //       dispatch(Creators.updateUserInfo(userInfo));\n    //     } else {\n    //       throw new Error('Can not get user info from native');\n    //     }\n    //   });\n    // }\n    const userInfo = {\n      userid: '',\n      accesstoken: '',\n      phonenumber: '',\n      displayname: '',\n      avatar: ''\n    };\n    setAuthorizationHeader(userInfo.userid, userInfo.accesstoken);\n    dispatch(Creators.updateUserInfo(userInfo));\n  } catch (error) {\n    dispatch(Creators.updateUserInfo(null));\n  }\n};\n","import './toast.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TOAST_TIME = 3000;\nconst FADE_OUT_TIME = 500;\nconst FADE_IN_TIME = 500;\n\nexport default class Toast extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: true\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ isVisible: false }, () => {\n        setTimeout(this.props.requestClose, FADE_OUT_TIME);\n      });\n    }, this.props.duration + FADE_IN_TIME);\n  }\n  render() {\n    const className = this.state.isVisible ? 'toast' : 'toast none';\n    return (\n      <div className={className}>\n        <div className=\"toast__toast-content\">\n          <span className=\"icon-general_check\" />\n          <span className=\"toast__toast-content__toast-msg\">\n            {this.props.message}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nToast.propTypes = {\n  message: PropTypes.string,\n  duration: PropTypes.number,\n  requestClose: PropTypes.func.isRequired\n};\nToast.defaultProps = {\n  message: '',\n  duration: TOAST_TIME,\n  requestClose: () => {}\n};\n","import React from 'react';\nimport 'spinkit/css/spinners/7-three-bounce.css';\n\nexport default class Loading extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"sk-three-bounce\">\n        <div className=\"sk-child sk-bounce1\" />\n        <div className=\"sk-child sk-bounce2\" />\n        <div className=\"sk-child sk-bounce3\" />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './index.scss';\n\nconst BoxWrapper = (props) => (\n  <div className={`box-wrapper ${props.className}`}>{props.children}</div>\n);\nexport default BoxWrapper;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport './index.scss';\n\nconst ZPButton = ({ className, titleClassName, ...props }) => (\n  <Button\n    variant=\"contained\"\n    color=\"secondary\"\n    size=\"small\"\n    {...props}\n    className={`zp-button ${className}`}\n  >\n    <span className={`title ${titleClassName}`}>{props.title}</span>\n  </Button>\n);\nexport default ZPButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './segmented-control-react.css';\n\nexport default class SegmentedControl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSegment: 0\n    };\n    this.renderSegments = this.renderSegments.bind(this);\n  }\n  static defaultProps = {\n    onChangeSegment: (x) => x,\n    variant: 'base',\n    selected: 0\n  };\n  componentDidMount() {\n    let selected = this.props.selected;\n    if (\n      this.props.segments\n        .map(function(e) {\n          return e.disabled;\n        })\n        .indexOf(true) == selected\n    ) {\n      delete this.props.segments[selected].disabled;\n      //   console.error('Selected segment cannot be disabled');\n    }\n\n    this.setState({ selectedSegment: selected });\n  }\n\n  onChange = (selectedSegment) => {\n    this.setState({ selectedSegment });\n    this.props.onChangeSegment(selectedSegment);\n  };\n\n  renderSegments = () => {\n    return this.props.segments.map((segment, i) => {\n      if (i === this.state.selectedSegment) {\n        return (\n          <li key={i} className={`${this.props.variant} selected`}>\n            {segment.name}\n          </li>\n        );\n      } else {\n        if (segment.disabled) {\n          return (\n            <li\n              key={i}\n              className={`${this.props.variant}`}\n              aria-disabled=\"true\"\n            >\n              {segment.name}\n            </li>\n          );\n        } else {\n          return (\n            <li\n              key={i}\n              className={`${this.props.variant}`}\n              onClick={() => this.onChange(i)}\n            >\n              {segment.name}\n            </li>\n          );\n        }\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"r-segmented-control\">\n        <ul>{this.renderSegments()}</ul>\n      </div>\n    );\n  }\n}\n\nSegmentedControl.propTypes = {\n  segments: PropTypes.array.isRequired,\n  selected: PropTypes.number,\n  variant: PropTypes.string\n};\n","import React from 'react';\nimport './index.scss';\n\nconst CircleButton = (props) => (\n  <button {...props} className={`circle-button-wrapper ${props.className}`}>\n    <div className=\"button\" />\n  </button>\n);\n\nconst ZPWrapperPageHOC = (Comp) => {\n  const newComp = class NewComp extends React.Component {\n    handleCloseButtonPress = () => {\n      const { history } = this.props;\n      // console.log()\n      history.goBack();\n      // history.length = history.length - 1;\n\n      // if (history.length === 1) {\n      //   window.ZaloPay.closeWindow();\n      // } else {\n\n      // }\n    };\n    handleRightButtonPress = () => {\n      const { history } = this.props;\n\n      alert(history.length);\n    };\n\n    render() {\n      return (\n        <div>\n          <Comp {...this.props} />\n          <CircleButton\n            className=\"left-header-button\"\n            onClick={this.handleCloseButtonPress}\n          />\n          <CircleButton\n            className=\"right-header-button\"\n            onClick={this.handleRightButtonPress}\n          />\n        </div>\n      );\n    }\n  };\n  return newComp;\n};\nexport default ZPWrapperPageHOC;\n","export { default as Loading } from './loading';\nexport { default as Toast } from './toast';\nexport { default as ProcessSpinner } from './process-spinner';\nexport { default as BoxWrapper } from './box-wrapper';\nexport { default as ZPButton } from './button';\n\nexport { default as SegmentedControl } from './segmented-control-react';\nexport { default as ZPWrapperPageHOC } from './wrapper-page-hoc';\n"],"sourceRoot":""}